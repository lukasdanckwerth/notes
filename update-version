#!/bin/bash
set -e
set -u

log() {
  echo -e "[update-version]  ${*}"
}

die() {
  log "${*}" && exit 1
}

# check for local changes
if [[ ! $(git status --porcelain) ]]; then
  log "no changes to commit" && exit 0
fi

# regular expressions
UV_REGEX_VERSION_TAG="^INS_VERSION=[0-9]{1,20}$"
UV_REGEX_VERSION="[0-9]{1,20}$"

# receive script
UV_SCRIPT_DIR="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)"
UV_SCRIPT_NAME="install-server.sh"
UV_SCRIPT="${UV_SCRIPT_DIR}/scripts/${UV_SCRIPT_NAME}"

# validate script
[[ -f "${UV_SCRIPT}" ]] || (die "ERROR: missing script at ${UV_SCRIPT}.")
echo "script: ${UV_SCRIPT}"

# receive current version
UV_CURRENT_TAG=$(grep -E "${UV_REGEX_VERSION_TAG}" "${UV_SCRIPT}")
UV_TAGS_RESULTS_COUNT=$(echo "${UV_CURRENT_TAG}" | wc -l | xargs echo -n)
[[ "${UV_TAGS_RESULTS_COUNT}" == "1" ]] || die "ERROR: found more than one (${UV_TAGS_RESULTS_COUNT}) version tag."
[[ "${UV_CURRENT_TAG}" == "" ]] && die "ERROR: can't receive version tag."

UV_CURRENT_VERSION=$(echo "${UV_CURRENT_TAG}" | grep -o -E "${UV_REGEX_VERSION}")
[[ "${UV_CURRENT_VERSION}" == "" ]] && die "ERROR: can't receive version."

# calculate next version
UV_NEW_VERSION=$((UV_CURRENT_VERSION + 1))
UV_NEW_TAG="INS_VERSION=${UV_NEW_VERSION}"

echo "current: ${UV_CURRENT_TAG}"
echo "new: ${UV_NEW_TAG}"

# dry sed run
UV_CHANGES=$(sed -n "s/${UV_CURRENT_TAG}/${UV_NEW_TAG}/gp" "${UV_SCRIPT}")
[[ "${UV_NEW_TAG}" == "${UV_CHANGES}" ]] || die "ERROR: changes not as expected. expected: '${UV_NEW_TAG}' after change: '${UV_CHANGES}'"

# wet sed run
if [[ "$OSTYPE" == "darwin"* ]]; then
  sed -i "" "s/${UV_CURRENT_TAG}/${UV_NEW_TAG}/g" "${UV_SCRIPT}"
else
  sed -i "s/${UV_CURRENT_TAG}/${UV_NEW_TAG}/g" "${UV_SCRIPT}"
fi

git add .
git commit -m "version ${UV_NEW_VERSION}"
git push

echo && log "new version ${UV_NEW_VERSION} (was ${UV_CURRENT_VERSION})" && echo
